&НаСервере
Перем xddTestRunner;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
КонецПроцедуры

#Область Служебные

&НаСервере
Процедура ЗагрузитьПлагины(xUnit)

	xUnit.Плагины = Новый Структура;
	
	НайденныеФайлы = НайтиФайлы(КаталогПлагинов, "*.epf", Ложь);
	Для каждого ФайлОбработки Из НайденныеФайлы Цикл
		Обработка = ВнешниеОбработки.Создать(ФайлОбработки.ПолноеИмя, Ложь);
		Попытка
			ОписаниеПлагина = Обработка.ОписаниеПлагина(xUnit.ТипыПлагинов);
			Обработка.Инициализация(xUnit);
			xUnit.Плагины.Вставить(ОписаниеПлагина.Идентификатор, Обработка);
		Исключение
			Ошибка = "Возникла ошибка при загрузке плагина: "+ФайлОбработки.Имя + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			Сообщить(Ошибка);
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКxddTestRunnerНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие); 
	Диалог.Заголовок = "Выберите файл xddTestRunner"; 
	Если ЗначениеЗаполнено(ПутьКxddTestRunner) Тогда
		Диалог.Каталог = ПолучитьКаталогПоПутиФайла(ПутьКxddTestRunner);
	КонецЕсли;
	Диалог.ПолноеИмяФайла = ""; 
	Фильтр = "EPF-файл (*.epf)|*.epf"; 
	Диалог.Фильтр = Фильтр; 
	Диалог.МножественныйВыбор = Ложь; 
	ВыборФайлаОткрытияxddTestRunner = новый ОписаниеОповещения("ВыборФайлаОткрытияxddTestRunner",ЭтотОбъект);
	Диалог.Показать(ВыборФайлаОткрытияxddTestRunner);

КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаОткрытияxddTestRunner(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	 Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() > 0 Тогда
		ПутьКxddTestRunner = ВыбранныеФайлы[0]; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогПлагиновНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога); 
	Диалог.Заголовок = "Выберите Каталог Плагинов"; 
	Если ЗначениеЗаполнено(КаталогПлагинов) Тогда
		Диалог.Каталог = КаталогПлагинов;
	КонецЕсли;
	Диалог.ПолноеИмяФайла = ""; 
	Диалог.МножественныйВыбор = Ложь; 
	ВыборФайлаОткрытияКаталогПлагинов = новый ОписаниеОповещения("ВыборФайлаОткрытияКаталогПлагинов",ЭтотОбъект);
	Диалог.Показать(ВыборФайлаОткрытияКаталогПлагинов);

КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаОткрытияКаталогПлагинов(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	 Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() > 0 Тогда
		КаталогПлагинов = ВыбранныеФайлы[0]; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Функция  ПолучитьКаталогПоПутиФайла(Знач ПутьКФайлу)
	Файл = новый Файл(ПутьКФайлу);
	Возврат Файл.Путь;	
КонецФункции

#КонецОбласти

#Область ТестыОтладка

&НаКлиенте
Процедура ВыполнитьТестПримерПолучитьДанныеИзМакета(Команда)
	ВыполнитьТестПримерПолучитьДанныеИзМакетаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьТестПримерПолучитьДанныеИзМакетаНаСервере()
	
	Попытка
		
		Если xddTestRunner=Неопределено Тогда
			xddTestRunner = ВнешниеОбработки.Создать(ПутьКxddTestRunner);
		КонецЕсли;
		
		мОбъект = РеквизитФормыВЗначение("Объект");
		
		ЗагрузитьПлагины(xddTestRunner);
		мОбъект.Инициализация(xddTestRunner);
		
		мОбъект.ПередЗапускомТеста();
		
		//выполнение тестовых методов
		Попытка
			мОбъект.Тест_ВыполнитьТестПримерПолучитьДанныеИзМакета();
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
		мОбъект.ПослеЗапускаТеста();
		
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьТест(Команда)
	ВыполнитьТестНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьТестНаСервере()
	
	Попытка
		
		Если xddTestRunner=Неопределено Тогда
			xddTestRunner = ВнешниеОбработки.Создать(ПутьКxddTestRunner);
		КонецЕсли;
		
		мОбъект = РеквизитФормыВЗначение("Объект");
		
		ЗагрузитьПлагины(xddTestRunner);
		мОбъект.Инициализация(xddTestRunner);
		
		мОбъект.ПередЗапускомТеста();
		
		//выполнение тестовых методов
		Попытка
			мОбъект.Тест_ВыполнитьИзФормы();
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
		мОбъект.ПослеЗапускаТеста();
		
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти